name: CI-CD EKS

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }} # e.g. flixconvert
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
  K8S_NAMESPACE: flixconvert

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }} # preferred: OIDC role

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set image tag
        id: vars
        run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build and push image
        run: |
          docker build -t ${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ steps.vars.outputs.TAG }} .
          docker push ${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ steps.vars.outputs.TAG }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Render manifests with image tag
        run: |
          sed -i "s|<ECR_REGISTRY>/<ECR_REPOSITORY>:<TAG>|${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ steps.vars.outputs.TAG }}|g" k8s/deployment.yaml

      - name: Apply K8s manifests
        uses: azure/k8s-deploy@v4
        with:
          namespace: ${{ env.K8S_NAMESPACE }}
          manifests: |
            k8s/namespace.yaml
            k8s/secret.yaml
            k8s/deployment.yaml
            k8s/service.yaml
            k8s/ingress.yaml
            k8s/hpa.yaml
          strategy: apply

      - name: Rollout status
        run: kubectl rollout status deploy/flixconvert -n ${{ env.K8S_NAMESPACE }}
