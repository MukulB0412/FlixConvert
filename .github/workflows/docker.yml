name: CI-CD DockerHub + K8s

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE_NAME: mukul0412/flixconvert   # <â€” your Docker Hub repo

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: build
        run: |
          TAG=${GITHUB_SHA::7}
          docker build -t $IMAGE_NAME:$TAG -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:$TAG
          docker push $IMAGE_NAME:latest
          echo "TAG=$TAG" >> $GITHUB_OUTPUT

      # Render K8s manifest with the new image tag
      - name: Render deployment
        run: |
          mkdir -p k8s/rendered
          sed "s#IMAGE_PLACEHOLDER#$IMAGE_NAME:${{ steps.build.outputs.TAG }}#g" k8s/deployment.yaml > k8s/rendered/deployment.yaml

      # Deploy only if kubeconfig secret is present (so you can enable CD later without editing this file)
      - name: Deploy to Kubernetes
        if: ${{ secrets.KUBE_CONFIG_DATA != '' }}
        uses: azure/k8s-deploy@v4
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG_DATA }}
          namespace: flixconvert
          manifests: |
            k8s/namespace.yaml
            k8s/secret.yaml
            k8s/rendered/deployment.yaml
            k8s/service.yaml
          strategy: apply

      - name: Show rollout status (optional)
        if: ${{ secrets.KUBE_CONFIG_DATA != '' }}
        run: kubectl rollout status deploy/flixconvert -n flixconvert
